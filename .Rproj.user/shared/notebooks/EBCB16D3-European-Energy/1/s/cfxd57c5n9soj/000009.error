{"frames":[{"func":"food_consumption %>% group_by(country) %>% summarise(co2 = sum(co2_emmission)) %>% \n    slice_max(., 10, co2) %>% arrange(co2) %>% mutate(n = -4:5) %>% \n    rowwise() %>% mutate(x = list(c(-10, 0, 0, -10)), y = list(c(n * \n    4 - 1.4, n * 2 - 0.7, n * 2 + 0.7, n * 4 + 1.4))) %>% unnest(cols = c(x,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(quote(`_fseq`(`_lhs`)), env, env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(quote(`_fseq`(`_lhs`)), env, env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`_fseq`(`_lhs`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"freduce(value, `_function_list`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"function_list[[i]](value)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., n = -4:5)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate.data.frame(., n = -4:5)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_cols(.data, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch({\n    for (i in seq_along(dots)) {\n        not_named <- (is.null(dots_names) || dots_names[i] == \n            \"\") ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"value[[3L]](cond)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_mutate_recycle_incompatible_size(e, index = i, dots = dots)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_dplyr(index, dots, \"mutate\", problem = \"Input `{error_name}` can't be recycled to size {cnd$size}.\", \n    i = \"Input `{error_name}` must be size {or_1(cnd$size)}, not {cnd$x_size}.\", \n    cnd_bullet_rowwise_unlist())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(bullets, class = \"dplyr_error\", error_name = error_name, \n    error_expression = error_expression, index = .index, dots = dots, \n    fn = fn, parent = parent)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: Problem with `mutate()` input `n`.\n\u001B[31mx\u001B[39m Input `n` can't be recycled to size 1.\n\u001B[34mâ„¹\u001B[39m Input `n` is `-4:5`.\n\u001B[34mâ„¹\u001B[39m Input `n` must be size 1, not 10.\n"}